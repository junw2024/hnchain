// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package userclient

import (
	"context"

	"hnchain/user/rpc/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	LoginRequest          = user.LoginRequest
	LoginResponse         = user.LoginResponse
	RegisterUserReq       = user.RegisterUserReq
	RegisterUserRes       = user.RegisterUserRes
	UserCollectionAddReq  = user.UserCollectionAddReq
	UserCollectionAddRes  = user.UserCollectionAddRes
	UserCollectionDelReq  = user.UserCollectionDelReq
	UserCollectionDelRes  = user.UserCollectionDelRes
	UserCollectionListReq = user.UserCollectionListReq
	UserCollectionListRes = user.UserCollectionListRes
	UserInfo              = user.UserInfo
	UserInfoRequest       = user.UserInfoRequest
	UserInfoResponse      = user.UserInfoResponse
	UserRevAddr           = user.UserRevAddr
	UserRevAddrAddReq     = user.UserRevAddrAddReq
	UserRevAddrAddRes     = user.UserRevAddrAddRes
	UserRevAddrDelReq     = user.UserRevAddrDelReq
	UserRevAddrDelRes     = user.UserRevAddrDelRes
	UserRevAddrEditReq    = user.UserRevAddrEditReq
	UserRevAddrEditRes    = user.UserRevAddrEditRes
	UserRevAddrInfoReq    = user.UserRevAddrInfoReq
	UserRevAddrListReq    = user.UserRevAddrListReq
	UserRevAddrListRes    = user.UserRevAddrListRes

	User interface {
		// 登录
		Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
		// 获得用户信息
		UserInfo(ctx context.Context, in *UserInfoRequest, opts ...grpc.CallOption) (*UserInfoResponse, error)
		// 注册用户
		RegisterUser(ctx context.Context, in *RegisterUserReq, opts ...grpc.CallOption) (*RegisterUserRes, error)
		// 添加收获地址
		AddUserRevAddr(ctx context.Context, in *UserRevAddrAddReq, opts ...grpc.CallOption) (*UserRevAddrAddRes, error)
		// 编辑收获地址
		EditUserRevAddr(ctx context.Context, in *UserRevAddrEditReq, opts ...grpc.CallOption) (*UserRevAddrEditRes, error)
		// 删除收获地址
		DelUserRevAddr(ctx context.Context, in *UserRevAddrDelReq, opts ...grpc.CallOption) (*UserCollectionDelRes, error)
		// 获取收获地址列表
		GetUserRevAddrList(ctx context.Context, in *UserRevAddrListReq, opts ...grpc.CallOption) (*UserRevAddrListRes, error)
		// 添加收藏
		AddUserCollection(ctx context.Context, in *UserCollectionAddReq, opts ...grpc.CallOption) (*UserCollectionAddRes, error)
		// 删除收藏
		DelUserCollection(ctx context.Context, in *UserCollectionDelReq, opts ...grpc.CallOption) (*UserCollectionDelRes, error)
		// 收藏列表
		GetUserCollectionList(ctx context.Context, in *UserCollectionListReq, opts ...grpc.CallOption) (*UserCollectionListRes, error)
		// 根据主键id,查询收获地址
		GetUserRevAddrInfo(ctx context.Context, in *UserRevAddrInfoReq, opts ...grpc.CallOption) (*UserRevAddr, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

// 登录
func (m *defaultUser) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

// 获得用户信息
func (m *defaultUser) UserInfo(ctx context.Context, in *UserInfoRequest, opts ...grpc.CallOption) (*UserInfoResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.UserInfo(ctx, in, opts...)
}

// 注册用户
func (m *defaultUser) RegisterUser(ctx context.Context, in *RegisterUserReq, opts ...grpc.CallOption) (*RegisterUserRes, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.RegisterUser(ctx, in, opts...)
}

// 添加收获地址
func (m *defaultUser) AddUserRevAddr(ctx context.Context, in *UserRevAddrAddReq, opts ...grpc.CallOption) (*UserRevAddrAddRes, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.AddUserRevAddr(ctx, in, opts...)
}

// 编辑收获地址
func (m *defaultUser) EditUserRevAddr(ctx context.Context, in *UserRevAddrEditReq, opts ...grpc.CallOption) (*UserRevAddrEditRes, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.EditUserRevAddr(ctx, in, opts...)
}

// 删除收获地址
func (m *defaultUser) DelUserRevAddr(ctx context.Context, in *UserRevAddrDelReq, opts ...grpc.CallOption) (*UserCollectionDelRes, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.DelUserRevAddr(ctx, in, opts...)
}

// 获取收获地址列表
func (m *defaultUser) GetUserRevAddrList(ctx context.Context, in *UserRevAddrListReq, opts ...grpc.CallOption) (*UserRevAddrListRes, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUserRevAddrList(ctx, in, opts...)
}

// 添加收藏
func (m *defaultUser) AddUserCollection(ctx context.Context, in *UserCollectionAddReq, opts ...grpc.CallOption) (*UserCollectionAddRes, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.AddUserCollection(ctx, in, opts...)
}

// 删除收藏
func (m *defaultUser) DelUserCollection(ctx context.Context, in *UserCollectionDelReq, opts ...grpc.CallOption) (*UserCollectionDelRes, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.DelUserCollection(ctx, in, opts...)
}

// 收藏列表
func (m *defaultUser) GetUserCollectionList(ctx context.Context, in *UserCollectionListReq, opts ...grpc.CallOption) (*UserCollectionListRes, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUserCollectionList(ctx, in, opts...)
}

// 根据主键id,查询收获地址
func (m *defaultUser) GetUserRevAddrInfo(ctx context.Context, in *UserRevAddrInfoReq, opts ...grpc.CallOption) (*UserRevAddr, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUserRevAddrInfo(ctx, in, opts...)
}
